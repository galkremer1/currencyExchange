{"version":3,"sources":["chart/CandleStickChart.js","App.js","utils/utils.js","index.js"],"names":["CandleStickChartWithAnnotation","margin","left","right","top","bottom","_this$props","this","props","type","initialData","data","width","ratio","chartTitle","yAxisLabelX","yAxisLabelY","_xScaleProvider","discontinuousTimeScaleProvider","inputDateAccessor","d","date","xScaleProvider","xScale","xAccessor","displayXAccessor","xExtents","last","Math","max","length","react_default","a","createElement","es","height","seriesName","annotation","x","y","fontSize","text","id","yExtents","high","low","padding","axes","axisAt","orient","coordinates","at","displayFormat","timeFormat","format","ticks","rotate","series","itemType","edgeAt","yAccessor","close","fill","open","tooltip","origin","strokeDasharray","React","Component","defaultProps","fitWidth","timeIntervalOptions","value","label","currencyOptions","defaultCurrencyOption","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setData","_ref","newCurrency","currency","newTimeInterval","timeInterval","_this$state","state","setState","loading","time","cur","fetch","then","response","JSON","parse","map","objectSpread","Date","reverse","getData","selectedTimeInterval","setTimeInterval","setCurrency","selectedCurrency","_this2","classes","className","dist_default","options","onChange","option","Button_default","key","variant","color","button","onClick","CandleStickChart","withStyles","theme","spacing","unit","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e963d292.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tEdgeIndicator,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { Label } from \"react-stockcharts/lib/annotation\";\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport { OHLCTooltip } from \"react-stockcharts/lib/tooltip\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last } from \"react-stockcharts/lib/utils\";\n\nclass CandleStickChartWithAnnotation extends React.Component {\n\trender() {\n\t\tconst margin = { left: 80, right: 80, top: 30, bottom: 50 };\n\t\tconst height = 400;\n\t\tconst { type, data: initialData, width, ratio, chartTitle} = this.props;\n\n\t\tconst [yAxisLabelX, yAxisLabelY] = [\n\t\t\twidth - margin.left - 40,\n\t\t\t(height - margin.top - margin.bottom) / 2\n\t\t];\n\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(initialData);\n\n\t\tconst start = xAccessor(last(data));\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\n\t\tconst xExtents = [start, end];\n\n\t\treturn (\n\t\t\t<ChartCanvas height={height}\n\t\t\t\t\tratio={ratio}\n\t\t\t\t\twidth={width}\n\t\t\t\t\tmargin={margin}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\t\tdata={data}\n\t\t\t\t\txScale={xScale}\n\t\t\t\t\txAccessor={xAccessor}\n\t\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t\t\txExtents={xExtents}>\n\n\t\t\t\t<Label x={(width - margin.left - margin.right) / 2} y={30}\n\t\t\t\t\tfontSize={30} text={chartTitle} />\n\n\t\t\t\t<Chart id={1}\n\t\t\t\t\t\tyExtents={[d => [d.high, d.low]]}\n\t\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\n\t\t\t\t\t<Label x={(width - margin.left - margin.right) / 2} y={height - 45}\n\t\t\t\t\t\tfontSize={12} text=\"XAxis Label here\" />\n\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\n\t\t\t\t\t<Label x={yAxisLabelX} y={yAxisLabelY}\n\t\t\t\t\t\trotate={-90}\n\t\t\t\t\t\tfontSize={12} text=\"YAxis Label here\" />\n\n\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\n\t\t\t\t\t\tyAccessor={d => d.close} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"}/>\n\n\t\t\t\t\t<OHLCTooltip origin={[-40, 0]}/>\n\n\t\t\t\t</Chart>\n\t\t\t\t<CrossHairCursor strokeDasharray=\"LongDashDot\" />\n\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartWithAnnotation.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithAnnotation.defaultProps = {\n\ttype: \"svg\",\n};\n\nCandleStickChartWithAnnotation = fitWidth(CandleStickChartWithAnnotation);\n\nexport default CandleStickChartWithAnnotation;\n","import React, { Component } from 'react';\nimport CandleStickChart from './chart/CandleStickChart';\nimport { getData } from \"./utils/utils\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dropdown from 'react-dropdown';\nimport './App.css';\nimport './loader.css';\nimport 'react-dropdown/style.css';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  }\n});\n\nconst timeIntervalOptions = [\n  {value: 'MIN_1',\n  label: '1 Minute'}, \n  {value: 'MIN_5',\n  label: '5 Minutes'}, \n  {value: 'HOUR_1',\n  label: '1 Hour'}, \n  {value: 'WEEK_1',\n  label: '1 Week'}];\n\n  const currencyOptions = [\n     'eur-usd', 'usd-eur', 'usd-nzd'\n  ];\n  const defaultCurrencyOption = currencyOptions[0];\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      currency: defaultCurrencyOption,\n      timeInterval: 'MIN_1'\n    }\n  }\n\n  componentDidMount() {\n    this.setData({});\n  }\n\n  setData = ({currency: newCurrency, timeInterval: newTimeInterval }) => {\n    const { currency, timeInterval} = this.state;\n    this.setState({loading: true});\n    const time = newTimeInterval || timeInterval;\n    const cur = newCurrency || currency; \n    getData(time, cur).then(data => {\n      this.setState(\n        { data,\n          selectedTimeInterval: time,\n          loading: false,\n          currency: cur,\n          timeInterval: time\n         })\n\t\t});\n  }\n\n  setTimeInterval = (selectedTimeInterval) => {\n    const {timeInterval} = this.state;\n    if (selectedTimeInterval !== timeInterval )  {\n      this.setData({\n        timeInterval: selectedTimeInterval\n      })\n    }\n  }\n  \n  setCurrency = (selectedCurrency) => {\n    const {currency} = this.state;\n    if (selectedCurrency.value !== currency )  {\n      this.setData({\n        currency: selectedCurrency.value\n      })\n    }\n\n  }\n  render() {\n    const { classes } = this.props;\n    const { selectedTimeInterval } = this.state;\n\n    if (this.state.data == null ) {\n\t\t\treturn <div className=\"loading\">Loading&#8230;</div>;\n\t\t} else return (\n      <div className=\"App\">\n        <header className=\"App-header\"><h1>Currency Chart :</h1> \n        <Dropdown options={currencyOptions} onChange={this.setCurrency} value={defaultCurrencyOption}  />\n        </header>\n        <div>\n          <span>Time Interval: </span>\n          {timeIntervalOptions.map((option)=>{\n            return (<Button key={option.value} variant=\"contained\" color=\"primary\" className={classes.button +  (option.value === selectedTimeInterval ? ' selected': '')}\n            onClick={()=>this.setTimeInterval(option.value)}>{option.label}</Button>)\n          })}\n        </div>\n        { this.state.loading &&  \n         (<div className=\"loading\">Loading&#8230;</div>)\n        }\n        <CandleStickChart chartTitle={''} data={this.state.data} />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n\n","export function getData(timeInterval, currency) {\n\tconst promiseData = fetch(\"https://www.fxempire.com/api/v1/en/markets/\" + currency + \"/chart?time=\" + timeInterval )\n\t\t.then(response => response.text())\n        .then((data) => {\n            const dataArr = JSON.parse(data);\n            return dataArr.map(data => ({...data, date: new Date(data.date) })).reverse();\n        });\n    return promiseData;\n    \n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}